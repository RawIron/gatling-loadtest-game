---

swagger: '2.0'

info:
  version: "0.1.0"
  title: game api as provided
  description: |
    api spec as needed for load testing.
    responses are often only checked for success. the `data` is not verified to be correct.
    thus the spec simplifies `data` to be a `string`.
    
    the design of the api is a little awkward.
    for example
    * the `session key` is passed by parameter and not by header.
    * for consistency the below would have been nice.
    ```json
    response = { success: boolean,
                 data: {}
               }
    ```
    * no usage of `<user_id>` in the url like
    ```
    GET /user/<user_id>
    ```


host: api.game.com
schemes:
  - http
produces:
  - application/json


tags:
  - name: gamestate
  - name: gifts
  - name: user
  - name: system
  - name: content
  - name: scoreboard


parameters:
  user_id:
    name: user_id
    in: query
    description: unique user identifier
    type: number
    format: int64
    required: true


paths:
  /game/player/save_game:
    post:
      description: |
        Saves snapshot of `game state`.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          description: session key
          required: true
          type: string
        -
          name: version_token
          in: query
          description: version token of gamestate
          required: true
          type: string
        -
          name: game_state
          in: query
          description: snapshot of game state
          required: true
          type: string
          format: json
      
      tags:
        - gamestate
      responses:
        200:
          description: success
          schema:
              title: Response
              type: object
              properties:
                success:
                  type: boolean
                version_token:
                  type: string

  /game/player/load_game:
    get:
      description: |
        Get `game state` objects.
      parameters:
        - $ref: '#/parameters/user_id'
      tags:
        - gamestate
      responses:
        200:
          description: success
          schema:
              title: Response
              type: object
              properties:
                success:
                  type: boolean
                version_token:
                  type: string
                game_content:
                  type: string
                  format: json

  /game/player/match_version:
    post:
      description: |
        Saves `version token`.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          description: session key
          required: true
          type: string
        -
          name: version_token
          in: query
          description: version token of gamestate
          required: true
          type: string
      
      tags:
        - gamestate
        
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'
  
  /gifts/send_gift:
    post:
      description: |
        Saves `gift` for the receiver.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          description: session key
          required: true
          type: string
        -
          name: to
          in: query
          description: receiver's user number
          required: true
          type: number
          format: int64
        -
          name: data
          in: query
          description: unique name of gift
          required: true
          type: string
  
      tags:
        - gifts
        
      responses:
        200:
          description: success
          schema:
              title: Response
              type: object
              properties:
                success:
                  type: boolean
                gift:
                  type: string
  
  /gifts/get_gifts:
    get:
      description: |
        Get `gift` objects.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          description: session key
          required: true
          type: string
      
      tags:
        - gifts
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'
  
  /gifts/accept_gift:
    get:
      description: |
        Accept one `gift`.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          description: session key
          required: true
          type: string
        -
          name: gift_id
          in: query
          description: unique gift id
          required: true
          type: number
          format: int64
      tags:
        - gifts
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'


  /user/login/unregistered:
    get:
      description: |
        Create a new `session` for any `user`.
      parameters:
        -
          name: uid
          in: query
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NewSessionResponse'


  /user/login/:
    get:
      description: |
        Create a new `session` for `authenticated user`.
      parameters:
        -
          name: username
          in: query
          required: true
          type: string
        -
          name: password
          in: query
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/NewSessionResponse'

  /user/logout/:
    get:
      description: |
        Drop `session` of `user`.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'

  /user/connect/:
    get:
      description: |
        Add another `user` object to this `user id`.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          required: true
          type: string
        -
          name: username
          in: query
          required: true
          type: string
        -
          name: email
          in: query
          required: true
          type: string
        -
          name: password
          in: query
          required: true
          type: string
        -
          name: password_confirm
          in: query
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'

  /user/register/:
    get:
      description: |
        Create a `user` object.
      parameters:
        -
          name: username
          in: query
          required: true
          type: string
        -
          name: email
          in: query
          required: true
          type: string
        -
          name: password
          in: query
          required: true
          type: string
        -
          name: password_confirm
          in: query
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'
                  

  /connection/connection_check/:
    get:
      description: |
        Ping.
      tags:
        - system
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'                  
                  

  /game/data/static:
    get:
      description: |
        Get lists of `static data` objects.
      tags:
        - content
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/StaticDataResponse'

  /game/data/content:
    get:
      description: |
        Get list of `content` objects.
      tags:
        - content
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/ContentResponse'

  /scoreboard/set_score/:
    post:
      description: |
        Update user's `score` on the scoreboard.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          required: true
          type: string
        -
          name: scoreboard
          in: query
          required: true
          type: string
        -
          name: score
          in: query
          required: true
          type: number
          format: int32
      tags:
        - scoreboard
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'
           

  /scoreboard/get_scores/:
    post:
      description: |
        Get user's `score` on this scoreboard.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          required: true
          type: string
        -
          name: scoreboard
          in: query
          required: true
          type: string
      tags:
        - scoreboard
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse'            
           

  /scoreboard/friends/:
    post:
      description: |
        Get `score` of user's friends on this scoreboard.
      parameters:
        - $ref: '#/parameters/user_id'
        -
          name: skey
          in: query
          required: true
          type: string
        -
          name: scoreboard
          in: query
          required: true
          type: string
        -
          name: friends
          in: query
          required: true
          type: string
      tags:
        - scoreboard
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/SimpleResponse' 

definitions:
  SimpleResponse:
    type: object
    properties:
      success:
        type: boolean
        
  AbstractResponse:
    type: object
    properties:
      success:
        type: boolean
      data:
        type: string
        format: json

  NewSession:
    type: object
    properties:
      user_id:
        type: number
        format: int64
      skey:
        type: string
        
  NewSessionResponse_:
    description: this would be the consistent way to do it
    type: object
    properties:
      success:
        type: boolean
      data:
        $ref: '#/definitions/NewSession'

  NewSessionResponse:
    description: inconsistent, see AbstractResponse
    type: object
    properties:
      success:
        type: boolean
      user_id:
        type: number
        format: int64
      skey:
        type: string

  Avatar:
    type: object
    properties:
      name:
        type: string

  StaticData:
    type: object
    properties:
      avatars:
        type: array
        items:
          $ref: '#/definitions/Avatar'
  
  StaticDataResponse:
    type: object
    properties:
      success:
        type: boolean
      data:
        $ref: '#/definitions/StaticData'
  
  ContentResponse:
    type: object
    properties:
      success:
        type: boolean
      data:
        type: string
